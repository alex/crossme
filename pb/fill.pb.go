// Code generated by protoc-gen-go. DO NOT EDIT.
// source: fill.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Fill_Flags int32

const (
	Fill_NONE          Fill_Flags = 0
	Fill_CHECKED_RIGHT Fill_Flags = 1
	Fill_CHECKED_WRONG Fill_Flags = 2
	Fill_PENCIL        Fill_Flags = 4
	Fill_DID_CHECK     Fill_Flags = 8
	Fill_DID_REVEAL    Fill_Flags = 16
)

var Fill_Flags_name = map[int32]string{
	0:  "NONE",
	1:  "CHECKED_RIGHT",
	2:  "CHECKED_WRONG",
	4:  "PENCIL",
	8:  "DID_CHECK",
	16: "DID_REVEAL",
}

var Fill_Flags_value = map[string]int32{
	"NONE":          0,
	"CHECKED_RIGHT": 1,
	"CHECKED_WRONG": 2,
	"PENCIL":        4,
	"DID_CHECK":     8,
	"DID_REVEAL":    16,
}

func (x Fill_Flags) String() string {
	return proto.EnumName(Fill_Flags_name, int32(x))
}

func (Fill_Flags) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3b4bcab62703fff1, []int{0, 0}
}

type Fill struct {
	Complete bool `protobuf:"varint,2,opt,name=complete,proto3" json:"complete,omitempty"`
	// Lamport timestamp for this structure
	Clock int64 `protobuf:"varint,3,opt,name=clock,proto3" json:"clock,omitempty"`
	// List of all node IDs represented in this fill.
	//
	// Node IDs are long, so we deduplicate on the wire by sending
	// int32 references into this array in the `owner` field.
	Nodes []string `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// This list must be stored in order by `index`
	Cells                []*Fill_Cell `protobuf:"bytes,5,rep,name=cells,proto3" json:"cells,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Fill) Reset()         { *m = Fill{} }
func (m *Fill) String() string { return proto.CompactTextString(m) }
func (*Fill) ProtoMessage()    {}
func (*Fill) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4bcab62703fff1, []int{0}
}

func (m *Fill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fill.Unmarshal(m, b)
}
func (m *Fill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fill.Marshal(b, m, deterministic)
}
func (m *Fill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fill.Merge(m, src)
}
func (m *Fill) XXX_Size() int {
	return xxx_messageInfo_Fill.Size(m)
}
func (m *Fill) XXX_DiscardUnknown() {
	xxx_messageInfo_Fill.DiscardUnknown(m)
}

var xxx_messageInfo_Fill proto.InternalMessageInfo

func (m *Fill) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

func (m *Fill) GetClock() int64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *Fill) GetNodes() []string {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *Fill) GetCells() []*Fill_Cell {
	if m != nil {
		return m.Cells
	}
	return nil
}

type Fill_Cell struct {
	Index                uint32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Clock                int64    `protobuf:"varint,2,opt,name=clock,proto3" json:"clock,omitempty"`
	Owner                uint32   `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Fill                 string   `protobuf:"bytes,4,opt,name=fill,proto3" json:"fill,omitempty"`
	Flags                uint32   `protobuf:"varint,5,opt,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fill_Cell) Reset()         { *m = Fill_Cell{} }
func (m *Fill_Cell) String() string { return proto.CompactTextString(m) }
func (*Fill_Cell) ProtoMessage()    {}
func (*Fill_Cell) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b4bcab62703fff1, []int{0, 0}
}

func (m *Fill_Cell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fill_Cell.Unmarshal(m, b)
}
func (m *Fill_Cell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fill_Cell.Marshal(b, m, deterministic)
}
func (m *Fill_Cell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fill_Cell.Merge(m, src)
}
func (m *Fill_Cell) XXX_Size() int {
	return xxx_messageInfo_Fill_Cell.Size(m)
}
func (m *Fill_Cell) XXX_DiscardUnknown() {
	xxx_messageInfo_Fill_Cell.DiscardUnknown(m)
}

var xxx_messageInfo_Fill_Cell proto.InternalMessageInfo

func (m *Fill_Cell) GetIndex() uint32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Fill_Cell) GetClock() int64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *Fill_Cell) GetOwner() uint32 {
	if m != nil {
		return m.Owner
	}
	return 0
}

func (m *Fill_Cell) GetFill() string {
	if m != nil {
		return m.Fill
	}
	return ""
}

func (m *Fill_Cell) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func init() {
	proto.RegisterEnum("crossme.Fill_Flags", Fill_Flags_name, Fill_Flags_value)
	proto.RegisterType((*Fill)(nil), "crossme.Fill")
	proto.RegisterType((*Fill_Cell)(nil), "crossme.Fill.Cell")
}

func init() { proto.RegisterFile("fill.proto", fileDescriptor_3b4bcab62703fff1) }

var fileDescriptor_3b4bcab62703fff1 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcb, 0x6a, 0xeb, 0x30,
	0x10, 0x86, 0x8f, 0x6d, 0x39, 0xc7, 0x99, 0xe2, 0xa2, 0x0e, 0x59, 0x98, 0xac, 0x44, 0x56, 0x5a,
	0x39, 0xd0, 0x3e, 0x41, 0xeb, 0x28, 0x17, 0x1a, 0x9c, 0x22, 0x4a, 0x0b, 0xdd, 0x84, 0x44, 0x51,
	0x4a, 0xa8, 0x62, 0x19, 0x3b, 0xd0, 0x3e, 0x66, 0x1f, 0xa9, 0x48, 0xee, 0x8d, 0xee, 0xe6, 0x1b,
	0x7e, 0xf4, 0xcd, 0x2f, 0x80, 0xfd, 0xc1, 0x98, 0xbc, 0x6e, 0xec, 0xc9, 0xe2, 0x7f, 0xd5, 0xd8,
	0xb6, 0x3d, 0xea, 0xd1, 0x7b, 0x08, 0x64, 0x7a, 0x30, 0x06, 0x87, 0x90, 0x28, 0x7b, 0xac, 0x8d,
	0x3e, 0xe9, 0x2c, 0x64, 0x01, 0x4f, 0xe4, 0x37, 0xe3, 0x00, 0x62, 0x65, 0xac, 0x7a, 0xc9, 0x22,
	0x16, 0xf0, 0x48, 0x76, 0xe0, 0xb6, 0x95, 0xdd, 0xe9, 0x36, 0x23, 0x2c, 0xe2, 0x7d, 0xd9, 0x01,
	0x72, 0x88, 0x95, 0x36, 0xa6, 0xcd, 0x62, 0x16, 0xf1, 0xb3, 0x4b, 0xcc, 0x3f, 0x4d, 0xb9, 0xb3,
	0xe4, 0x85, 0x36, 0x46, 0x76, 0x81, 0x61, 0x03, 0xc4, 0xa1, 0x7b, 0xe7, 0x50, 0xed, 0xf4, 0x5b,
	0x16, 0xb0, 0x80, 0xa7, 0xb2, 0x83, 0x1f, 0x67, 0xf8, 0xc7, 0x69, 0x5f, 0x2b, 0xdd, 0xf8, 0x4b,
	0x52, 0xd9, 0x01, 0x22, 0x10, 0xd7, 0x2d, 0x23, 0x2c, 0xe0, 0x7d, 0xe9, 0x67, 0x97, 0xdc, 0x9b,
	0xcd, 0xb3, 0xbb, 0xc3, 0x27, 0x3d, 0x8c, 0xb6, 0x10, 0x4f, 0xdd, 0x80, 0x09, 0x90, 0x72, 0x55,
	0x0a, 0xfa, 0x0f, 0x2f, 0x20, 0x2d, 0xe6, 0xa2, 0xb8, 0x15, 0x93, 0xb5, 0x5c, 0xcc, 0xe6, 0xf7,
	0x34, 0xf8, 0xbd, 0x7a, 0x94, 0xab, 0x72, 0x46, 0x43, 0x04, 0xe8, 0xdd, 0x89, 0xb2, 0x58, 0x2c,
	0x29, 0xc1, 0x14, 0xfa, 0x93, 0xc5, 0x64, 0xed, 0x23, 0x34, 0xc1, 0x73, 0x00, 0x87, 0x52, 0x3c,
	0x88, 0xeb, 0x25, 0xa5, 0x37, 0x83, 0x27, 0xfc, 0xea, 0xbc, 0xa9, 0xeb, 0x71, 0xdb, 0xa8, 0x71,
	0xbd, 0xdd, 0xf6, 0xfc, 0xc7, 0x5f, 0x7d, 0x04, 0x00, 0x00, 0xff, 0xff, 0xcb, 0x69, 0xf5, 0x90,
	0x86, 0x01, 0x00, 0x00,
}
