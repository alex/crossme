syntax = "proto3";
package crossme;

import "puzzle.proto";
import "fill.proto";
import "game.proto";

option go_package = "crossme.app/src/pb";

message GetPuzzleIndexArgs {

}

message GetPuzzleIndexResponse {
    repeated crossme.PuzzleIndex puzzles = 1;
}

message GetPuzzleByIdArgs {
    string id = 1;
}

message GetPuzzleResponse {
    crossme.Puzzle puzzle = 1;
}

message NewGameArgs {
    string puzzle_id = 1;
}

message NewGameResponse {
    crossme.Game game = 1;
}

message GetGameByIdArgs {
    string id = 1;
}

message GetGameResponse {
    crossme.Game game = 1;
    crossme.Puzzle puzzle = 2;
}

message UploadPuzzleArgs {
    string filename = 1;
    bytes data = 2;
}

message UploadPuzzleResponse {
    crossme.Puzzle puzzle = 1;
}

message SubscribeArgs {
    string game_id = 1;
    string node_id = 2;
}

message SubscribeEvent {
    crossme.Fill fill = 1;
}

message UpdateFillArgs {
    string game_id = 1;
    string node_id = 2;
    crossme.Fill fill = 3;
}

message UpdateFillResponse {
}

service CrossMe {
    rpc GetPuzzleIndex(GetPuzzleIndexArgs) returns (GetPuzzleIndexResponse);
    rpc GetPuzzleById(GetPuzzleByIdArgs) returns (GetPuzzleResponse);

    rpc NewGame(NewGameArgs) returns (NewGameResponse);
    rpc GetGameById(GetGameByIdArgs) returns (GetGameResponse);

    rpc UploadPuzzle(UploadPuzzleArgs) returns (UploadPuzzleResponse);
    rpc UpdateFill(UpdateFillArgs) returns (UpdateFillResponse);

    rpc Subscribe(SubscribeArgs) returns (stream SubscribeEvent);
}
