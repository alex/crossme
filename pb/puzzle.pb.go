// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/puzzle.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Puzzle struct {
	Title                string         `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Author               string         `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	Copyright            string         `protobuf:"bytes,3,opt,name=copyright,proto3" json:"copyright,omitempty"`
	Note                 string         `protobuf:"bytes,4,opt,name=note,proto3" json:"note,omitempty"`
	Width                int32          `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32          `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	Squares              []*Puzzle_Cell `protobuf:"bytes,8,rep,name=squares,proto3" json:"squares,omitempty"`
	AcrossClues          []*Puzzle_Clue `protobuf:"bytes,9,rep,name=across_clues,json=acrossClues,proto3" json:"across_clues,omitempty"`
	DownClues            []*Puzzle_Clue `protobuf:"bytes,10,rep,name=down_clues,json=downClues,proto3" json:"down_clues,omitempty"`
	Metadata             *Puzzle_Meta   `protobuf:"bytes,11,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Puzzle) Reset()         { *m = Puzzle{} }
func (m *Puzzle) String() string { return proto.CompactTextString(m) }
func (*Puzzle) ProtoMessage()    {}
func (*Puzzle) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd6f13fca15bc63e, []int{0}
}

func (m *Puzzle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Puzzle.Unmarshal(m, b)
}
func (m *Puzzle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Puzzle.Marshal(b, m, deterministic)
}
func (m *Puzzle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Puzzle.Merge(m, src)
}
func (m *Puzzle) XXX_Size() int {
	return xxx_messageInfo_Puzzle.Size(m)
}
func (m *Puzzle) XXX_DiscardUnknown() {
	xxx_messageInfo_Puzzle.DiscardUnknown(m)
}

var xxx_messageInfo_Puzzle proto.InternalMessageInfo

func (m *Puzzle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Puzzle) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Puzzle) GetCopyright() string {
	if m != nil {
		return m.Copyright
	}
	return ""
}

func (m *Puzzle) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func (m *Puzzle) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Puzzle) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Puzzle) GetSquares() []*Puzzle_Cell {
	if m != nil {
		return m.Squares
	}
	return nil
}

func (m *Puzzle) GetAcrossClues() []*Puzzle_Clue {
	if m != nil {
		return m.AcrossClues
	}
	return nil
}

func (m *Puzzle) GetDownClues() []*Puzzle_Clue {
	if m != nil {
		return m.DownClues
	}
	return nil
}

func (m *Puzzle) GetMetadata() *Puzzle_Meta {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Puzzle_Cell struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Black                bool     `protobuf:"varint,2,opt,name=black,proto3" json:"black,omitempty"`
	Circled              bool     `protobuf:"varint,3,opt,name=circled,proto3" json:"circled,omitempty"`
	Fill                 string   `protobuf:"bytes,4,opt,name=fill,proto3" json:"fill,omitempty"`
	ClueAcross           int32    `protobuf:"varint,5,opt,name=clue_across,json=clueAcross,proto3" json:"clue_across,omitempty"`
	ClueDown             int32    `protobuf:"varint,6,opt,name=clue_down,json=clueDown,proto3" json:"clue_down,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Puzzle_Cell) Reset()         { *m = Puzzle_Cell{} }
func (m *Puzzle_Cell) String() string { return proto.CompactTextString(m) }
func (*Puzzle_Cell) ProtoMessage()    {}
func (*Puzzle_Cell) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd6f13fca15bc63e, []int{0, 0}
}

func (m *Puzzle_Cell) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Puzzle_Cell.Unmarshal(m, b)
}
func (m *Puzzle_Cell) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Puzzle_Cell.Marshal(b, m, deterministic)
}
func (m *Puzzle_Cell) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Puzzle_Cell.Merge(m, src)
}
func (m *Puzzle_Cell) XXX_Size() int {
	return xxx_messageInfo_Puzzle_Cell.Size(m)
}
func (m *Puzzle_Cell) XXX_DiscardUnknown() {
	xxx_messageInfo_Puzzle_Cell.DiscardUnknown(m)
}

var xxx_messageInfo_Puzzle_Cell proto.InternalMessageInfo

func (m *Puzzle_Cell) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Puzzle_Cell) GetBlack() bool {
	if m != nil {
		return m.Black
	}
	return false
}

func (m *Puzzle_Cell) GetCircled() bool {
	if m != nil {
		return m.Circled
	}
	return false
}

func (m *Puzzle_Cell) GetFill() string {
	if m != nil {
		return m.Fill
	}
	return ""
}

func (m *Puzzle_Cell) GetClueAcross() int32 {
	if m != nil {
		return m.ClueAcross
	}
	return 0
}

func (m *Puzzle_Cell) GetClueDown() int32 {
	if m != nil {
		return m.ClueDown
	}
	return 0
}

type Puzzle_Clue struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Puzzle_Clue) Reset()         { *m = Puzzle_Clue{} }
func (m *Puzzle_Clue) String() string { return proto.CompactTextString(m) }
func (*Puzzle_Clue) ProtoMessage()    {}
func (*Puzzle_Clue) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd6f13fca15bc63e, []int{0, 1}
}

func (m *Puzzle_Clue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Puzzle_Clue.Unmarshal(m, b)
}
func (m *Puzzle_Clue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Puzzle_Clue.Marshal(b, m, deterministic)
}
func (m *Puzzle_Clue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Puzzle_Clue.Merge(m, src)
}
func (m *Puzzle_Clue) XXX_Size() int {
	return xxx_messageInfo_Puzzle_Clue.Size(m)
}
func (m *Puzzle_Clue) XXX_DiscardUnknown() {
	xxx_messageInfo_Puzzle_Clue.DiscardUnknown(m)
}

var xxx_messageInfo_Puzzle_Clue proto.InternalMessageInfo

func (m *Puzzle_Clue) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Puzzle_Clue) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Puzzle_Meta struct {
	Created *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	// sha256 of the .puz file that imported to this puzzle, in
	// hex
	Sha256 string `protobuf:"bytes,2,opt,name=sha256,proto3" json:"sha256,omitempty"`
	// YYYY-MM-DD parsed date that the puzzle was published, or ""
	Date                 string   `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Puzzle_Meta) Reset()         { *m = Puzzle_Meta{} }
func (m *Puzzle_Meta) String() string { return proto.CompactTextString(m) }
func (*Puzzle_Meta) ProtoMessage()    {}
func (*Puzzle_Meta) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd6f13fca15bc63e, []int{0, 2}
}

func (m *Puzzle_Meta) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Puzzle_Meta.Unmarshal(m, b)
}
func (m *Puzzle_Meta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Puzzle_Meta.Marshal(b, m, deterministic)
}
func (m *Puzzle_Meta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Puzzle_Meta.Merge(m, src)
}
func (m *Puzzle_Meta) XXX_Size() int {
	return xxx_messageInfo_Puzzle_Meta.Size(m)
}
func (m *Puzzle_Meta) XXX_DiscardUnknown() {
	xxx_messageInfo_Puzzle_Meta.DiscardUnknown(m)
}

var xxx_messageInfo_Puzzle_Meta proto.InternalMessageInfo

func (m *Puzzle_Meta) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Puzzle_Meta) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

func (m *Puzzle_Meta) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func init() {
	proto.RegisterType((*Puzzle)(nil), "crossme.Puzzle")
	proto.RegisterType((*Puzzle_Cell)(nil), "crossme.Puzzle.Cell")
	proto.RegisterType((*Puzzle_Clue)(nil), "crossme.Puzzle.Clue")
	proto.RegisterType((*Puzzle_Meta)(nil), "crossme.Puzzle.Meta")
}

func init() { proto.RegisterFile("pb/puzzle.proto", fileDescriptor_bd6f13fca15bc63e) }

var fileDescriptor_bd6f13fca15bc63e = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xcd, 0x8e, 0xd4, 0x3c,
	0x10, 0x54, 0xbe, 0x4d, 0x66, 0x92, 0xce, 0x27, 0x21, 0x59, 0x23, 0x64, 0x05, 0xa4, 0x1d, 0x71,
	0x9a, 0x53, 0x82, 0x66, 0xf9, 0x39, 0xf3, 0x73, 0x45, 0x42, 0x16, 0x27, 0x2e, 0x2b, 0x27, 0xe9,
	0x9d, 0x44, 0x38, 0xe3, 0x60, 0x3b, 0x1a, 0xd8, 0xa7, 0xe1, 0xc6, 0x6b, 0xa2, 0xb6, 0x63, 0xb8,
	0xb0, 0xdc, 0xba, 0x2a, 0x55, 0xb6, 0xab, 0xd2, 0xf0, 0x68, 0x6e, 0x9b, 0x79, 0xb9, 0xbf, 0x57,
	0x58, 0xcf, 0x46, 0x3b, 0xcd, 0xb6, 0x9d, 0xd1, 0xd6, 0x4e, 0x58, 0x5d, 0x9f, 0xb4, 0x3e, 0x29,
	0x6c, 0x3c, 0xdd, 0x2e, 0x77, 0x8d, 0x1b, 0x27, 0xb4, 0x4e, 0x4e, 0x73, 0x50, 0x3e, 0xfb, 0x99,
	0xc1, 0xe6, 0xa3, 0xb7, 0xb2, 0x1d, 0x64, 0x6e, 0x74, 0x0a, 0x79, 0xb2, 0x4f, 0x0e, 0x85, 0x08,
	0x80, 0x3d, 0x86, 0x8d, 0x5c, 0xdc, 0xa0, 0x0d, 0xff, 0xcf, 0xd3, 0x2b, 0x62, 0x4f, 0xa1, 0xe8,
	0xf4, 0xfc, 0xdd, 0x8c, 0xa7, 0xc1, 0xf1, 0x2b, 0xff, 0xe9, 0x0f, 0xc1, 0x18, 0xa4, 0x67, 0xed,
	0x90, 0xa7, 0xfe, 0x83, 0x9f, 0xe9, 0xfc, 0xcb, 0xd8, 0xbb, 0x81, 0x67, 0xfb, 0xe4, 0x90, 0x89,
	0x00, 0xe8, 0xfc, 0x01, 0xfd, 0x21, 0x1b, 0x4f, 0xaf, 0x88, 0xd5, 0xb0, 0xb5, 0x5f, 0x17, 0x69,
	0xd0, 0xf2, 0x7c, 0x7f, 0x75, 0x28, 0x8f, 0xbb, 0x7a, 0x0d, 0x55, 0x87, 0xf7, 0xd6, 0xef, 0x50,
	0x29, 0x11, 0x45, 0xec, 0x35, 0xfc, 0x2f, 0xbd, 0xe0, 0xb6, 0x53, 0x0b, 0x5a, 0x5e, 0x3c, 0x60,
	0x52, 0x0b, 0x8a, 0x32, 0x28, 0x69, 0xb6, 0xec, 0x06, 0xa0, 0xd7, 0x97, 0xf3, 0x6a, 0x83, 0x7f,
	0xd8, 0x0a, 0xd2, 0x05, 0xd3, 0x73, 0xc8, 0x27, 0x74, 0xb2, 0x97, 0x4e, 0xf2, 0x72, 0x9f, 0xfc,
	0xcd, 0xf2, 0x01, 0x9d, 0x14, 0xbf, 0x55, 0xd5, 0x8f, 0x04, 0x52, 0x7a, 0x31, 0x05, 0x3e, 0x2f,
	0x53, 0x8b, 0xc6, 0xf7, 0x9c, 0x89, 0x15, 0x51, 0x3d, 0xad, 0x92, 0xdd, 0x17, 0xdf, 0x73, 0x2e,
	0x02, 0x60, 0x1c, 0xb6, 0xdd, 0x68, 0x3a, 0x85, 0xbd, 0x2f, 0x39, 0x17, 0x11, 0x52, 0xc5, 0x77,
	0xa3, 0x52, 0xb1, 0x62, 0x9a, 0xd9, 0x35, 0x94, 0x14, 0xe3, 0x36, 0xe4, 0x5b, 0x8b, 0x06, 0xa2,
	0xde, 0x78, 0x86, 0x3d, 0x81, 0xc2, 0x0b, 0x28, 0xc9, 0x5a, 0x78, 0x4e, 0xc4, 0x7b, 0x7d, 0x39,
	0x57, 0x47, 0x48, 0x29, 0xdd, 0x83, 0x2f, 0x64, 0x90, 0x3a, 0xfc, 0x16, 0xff, 0xb6, 0x9f, 0xab,
	0x01, 0x52, 0x0a, 0xca, 0x5e, 0xc0, 0xb6, 0x33, 0x28, 0x1d, 0xf6, 0xde, 0x54, 0x1e, 0xab, 0x3a,
	0xac, 0x5e, 0x1d, 0x57, 0xaf, 0xfe, 0x14, 0x57, 0x4f, 0x44, 0x29, 0xdd, 0x64, 0x07, 0x79, 0x7c,
	0xf9, 0x2a, 0x2e, 0x57, 0x40, 0x74, 0x53, 0x2f, 0x1d, 0xc6, 0x9b, 0x68, 0x7e, 0xbb, 0xfb, 0xcc,
	0x62, 0xc3, 0x72, 0x9e, 0x1b, 0x6b, 0xba, 0x66, 0x6e, 0xdb, 0x8d, 0x3f, 0xfe, 0xe6, 0x57, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x6d, 0xf8, 0xcd, 0x31, 0x03, 0x03, 0x00, 0x00,
}
